upstream backend {
  server unix://backend/tmp/sockets/puma.sock fail_timeout=30s;
}

geo $allow_ip {
  default 0;
}

# リクエストメソッドの振り分けルールを定義
map $request_method $cors_method {
  OPTIONS 11;
  GET 1;
  POST 1;
  default 0;
}

# 管理側（バックエンド）
server {
  listen 80;

  # ドメインもしくはIPを指定
  server_name api.localhost;

  location / {
    if ($allow_ip) {
      return 404;
    }

    # リクエストメソッドが`GET`または`POST`だった場合の処理
    if ($cors_method ~ '1') {
      add_header 'Access-Control-Request-Headers'
        'GET,POST,OPTIONS';
      add_header 'Access-Control-Allow-Origin'
        'http://localhost';
      add_header 'Access-Control-Allow-Headers'
        'Keep-Alive,
        User-Agent,
        X-Requested-With,
        If-Modified-Since,
        Cache-Control,
        Content-Type';
      add_header Access-Control-Allow-Credentials true;
    }

    # リクエストメソッドが`OPTIONS`だった場合の処理
    if ($cors_method ~ '11') {
      add_header 'Access-Control-Max-Age' 600;
      add_header 'Content-Type' 'application/json';
      add_header 'Content-Length' 0;
      return 204;
    }

    ########################################
    # リバースプロキシ関連の設定
    ########################################
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_pass http://backend;
  }
}

# pgAdmin
server {
  listen 80;

  # ドメインもしくはIPを指定
  server_name pgadmin.localhost;

  location / {
    if ($allow_ip) {
      return 404;
    }

    ########################################
    # リバースプロキシ関連の設定
    ########################################
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_pass http://pgadmin;
  }
}

# 公開側（フロントエンド）
server {
  listen 80;

  # ドメインもしくはIPを指定
  server_name localhost;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  ########################################
  # リバースプロキシ関連の設定
  ########################################
  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_pass http://frontend:3000;
  }

  # Next.jsのホットリロードを有効にするための構成
  location /_next/webpack-hmr {
    proxy_pass http://frontend:3000/_next/webpack-hmr;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
