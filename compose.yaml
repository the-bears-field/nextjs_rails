services:
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    volumes:
      - ./frontend:/usr/src/app
    command: yarn dev
    expose:
      - "3000"
    networks:
      - public

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    volumes:
      - ./backend:/app
    environment:
      TZ: ${TIME_ZONE}
      RAILS_ENV: development
    expose:
      - "3001"
    networks:
      - public

  db:
    container_name: db
    build:
      context: .
      dockerfile: docker/db/Dockerfile
    environment:
      - POSTGRES_DATABASE=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
      - TZ=${TIME_ZONE}
      - PGTZ=${TIME_ZONE}
    volumes:
      - ./docker/db/data:/var/lib/postgresql/data
    networks:
      - private
    expose:
      - "5432"

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - 8888:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    profiles:
      - debug
    networks:
      - public
    depends_on:
      - db

  web:
    container_name: web
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    environment:
      TZ: ${TIME_ZONE}
    volumes:
      - ./docker/web/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker/web/log:/var/log/nginx
      - ./backend/public:/backend/public
      - ./backend/tmp:/backend/tmp
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - public
      - private

networks:
  public:
    driver: bridge
  private:
    driver: bridge
    internal: true
